/* Autogenerated with Kurento Idl */

/*
 * (C) Copyright 2013-2014 Kurento (http://kurento.org/)
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Lesser General Public License
 * (LGPL) version 2.1 which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl-2.1.html
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 */

var checkType = require('kurento-client').checkType;

/**
 * Checker for {@link core/complexTypes.RTCDataChannelStats}
 *
 * @memberof module:core/complexTypes
 *
 * @param {external:String} key
 * @param {module:core/complexTypes.RTCDataChannelStats} value
 */
function checkRTCDataChannelStats(key, value)
{
  checkType('String', key+'.label', value.label, true);
  checkType('String', key+'.protocol', value.protocol, true);
  checkType('int', key+'.datachannelid', value.datachannelid, true);
  checkType('RTCDataChannelState', key+'.state', value.state, true);
  checkType('int', key+'.messagesSent', value.messagesSent, true);
  checkType('int', key+'.bytesSent', value.bytesSent, true);
  checkType('int', key+'.messagesReceived', value.messagesReceived, true);
  checkType('int', key+'.bytesReceived', value.bytesReceived, true);
};


/**
 * Statistics related to RTC data channels.
 *
 * @memberof module:core/complexTypes
 *
 * @typedef core/complexTypes.RTCDataChannelStats
 *
 * @type {Object}
 * @property {external:String} label
 *  The RTCDatachannel label.
 * @property {external:String} protocol
 *  The protocol used.
 * @property {external:Integer} datachannelid
 *  The RTCDatachannel identifier.
 * @property {module:core/complexTypes.RTCDataChannelState} state
 *  The state of the RTCDatachannel.
 * @property {external:Integer} messagesSent
 *  Represents the total number of API 'message' events sent.
 * @property {external:Integer} bytesSent
 *  Represents the total number of payload bytes sent on this RTCDatachannel, i.e., not including headers or padding.
 * @property {external:Integer} messagesReceived
 *  Represents the total number of API 'message' events received.
 * @property {external:Integer} bytesReceived
 *  Represents the total number of bytes received on this RTCDatachannel, i.e., not including headers or padding.
 */


module.exports = checkRTCDataChannelStats;
