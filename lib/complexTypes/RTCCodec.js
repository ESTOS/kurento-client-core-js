/* Autogenerated with Kurento Idl */

/*
 * (C) Copyright 2013-2014 Kurento (http://kurento.org/)
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Lesser General Public License
 * (LGPL) version 2.1 which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl-2.1.html
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 */

var checkType = require('kurento-client').checkType;

/**
 * Checker for {@link core/complexTypes.RTCCodec}
 *
 * @memberof module:core/complexTypes
 *
 * @param {external:String} key
 * @param {module:core/complexTypes.RTCCodec} value
 */
function checkRTCCodec(key, value)
{
  checkType('int', key+'.payloadType', value.payloadType, true);
  checkType('String', key+'.codec', value.codec, true);
  checkType('int', key+'.clockRate', value.clockRate, true);
  checkType('int', key+'.channels', value.channels, true);
  checkType('String', key+'.parameters', value.parameters, true);
};


/**
 * RTC codec statistics
 *
 * @memberof module:core/complexTypes
 *
 * @typedef core/complexTypes.RTCCodec
 *
 * @type {Object}
 * @property {external:Integer} payloadType
 *  Payload type as used in RTP encoding.
 * @property {external:String} codec
 *  e.g., video/vp8 or equivalent.
 * @property {external:Integer} clockRate
 *  Represents the media sampling rate.
 * @property {external:Integer} channels
 *  Use 2 for stereo, missing for most other cases.
 * @property {external:String} parameters
 *  From the SDP description line.
 */


module.exports = checkRTCCodec;
