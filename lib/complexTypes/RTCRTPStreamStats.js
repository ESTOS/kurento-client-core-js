/* Autogenerated with Kurento Idl */

/*
 * (C) Copyright 2013-2014 Kurento (http://kurento.org/)
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Lesser General Public License
 * (LGPL) version 2.1 which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl-2.1.html
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 */

var checkType = require('kurento-client').checkType;

/**
 * Checker for {@link core/complexTypes.RTCRTPStreamStats}
 *
 * @memberof module:core/complexTypes
 *
 * @param {external:String} key
 * @param {module:core/complexTypes.RTCRTPStreamStats} value
 */
function checkRTCRTPStreamStats(key, value)
{
  checkType('String', key+'.ssrc', value.ssrc, true);
  checkType('String', key+'.associateStatsId', value.associateStatsId, true);
  checkType('boolean', key+'.isRemote', value.isRemote, true);
  checkType('String', key+'.mediaTrackId', value.mediaTrackId, true);
  checkType('String', key+'.transportId', value.transportId, true);
  checkType('String', key+'.codecId', value.codecId, true);
  checkType('int', key+'.firCount', value.firCount, true);
  checkType('int', key+'.pliCount', value.pliCount, true);
  checkType('int', key+'.nackCount', value.nackCount, true);
  checkType('int', key+'.sliCount', value.sliCount, true);
};


/**
 * Statistics for the RTP stream
 *
 * @memberof module:core/complexTypes
 *
 * @typedef core/complexTypes.RTCRTPStreamStats
 *
 * @type {Object}
 * @property {external:String} ssrc
 *  The synchronized source SSRC
 * @property {external:String} associateStatsId
 *  The associateStatsId is used for looking up the corresponding (local/remote) RTCStats object for a given SSRC.
 * @property {external:Boolean} isRemote
 *  false indicates that the statistics are measured locally, while true indicates that the measurements were done at the remote endpoint and reported in an RTCP RR/XR.
 * @property {external:String} mediaTrackId
 *  Track identifier.
 * @property {external:String} transportId
 *  It is a unique identifier that is associated to the object that was inspected to produce the RTCTransportStats associated with this RTP stream.
 * @property {external:String} codecId
 *  The codec identifier
 * @property {external:Integer} firCount
 *  Count the total number of Full Intra Request (FIR) packets received by the sender. This metric is only valid for video and is sent by receiver.
 * @property {external:Integer} pliCount
 *  Count the total number of Packet Loss Indication (PLI) packets received by the sender and is sent by receiver.
 * @property {external:Integer} nackCount
 *  Count the total number of Negative ACKnowledgement (NACK) packets received by the sender and is sent by receiver.
 * @property {external:Integer} sliCount
 *  Count the total number of Slice Loss Indication (SLI) packets received by the sender. This metric is only valid for video and is sent by receiver.
 */


module.exports = checkRTCRTPStreamStats;
