/* Autogenerated with Kurento Idl */

/*
 * (C) Copyright 2013-2014 Kurento (http://kurento.org/)
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Lesser General Public License
 * (LGPL) version 2.1 which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl-2.1.html
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 */

var checkType = require('kurento-client').checkType;

/**
 * Checker for {@link core/complexTypes.RTCInboundRTPStreamStats}
 *
 * @memberof module:core/complexTypes
 *
 * @param {external:String} key
 * @param {module:core/complexTypes.RTCInboundRTPStreamStats} value
 */
function checkRTCInboundRTPStreamStats(key, value)
{
  checkType('int', key+'.packetsReceived', value.packetsReceived, true);
  checkType('int', key+'.bytesReceived', value.bytesReceived, true);
  checkType('int', key+'.packetsLost', value.packetsLost, true);
  checkType('float', key+'.jitter', value.jitter, true);
  checkType('float', key+'.fractionLost', value.fractionLost, true);
};


/**
 * Statistics that represents the measurement metrics for the incoming media stream.
 *
 * @memberof module:core/complexTypes
 *
 * @typedef core/complexTypes.RTCInboundRTPStreamStats
 *
 * @type {Object}
 * @property {external:Integer} packetsReceived
 *  Total number of RTP packets received for this SSRC.
 * @property {external:Integer} bytesReceived
 *  Total number of bytes received for this SSRC.
 * @property {external:Integer} packetsLost
 *  Total number of RTP packets lost for this SSRC.
 * @property {external:Number} jitter
 *  Packet Jitter measured in seconds for this SSRC.
 * @property {external:Number} fractionLost
 *  The fraction packet loss reported for this SSRC.
 */


module.exports = checkRTCInboundRTPStreamStats;
