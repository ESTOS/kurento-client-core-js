/* Autogenerated with Kurento Idl */

/*
 * (C) Copyright 2013-2014 Kurento (http://kurento.org/)
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Lesser General Public License
 * (LGPL) version 2.1 which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl-2.1.html
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 */

var checkType = require('kurento-client').checkType;

/**
 * Checker for {@link core/complexTypes.RTCTransportStats}
 *
 * @memberof module:core/complexTypes
 *
 * @param {external:String} key
 * @param {module:core/complexTypes.RTCTransportStats} value
 */
function checkRTCTransportStats(key, value)
{
  checkType('int', key+'.bytesSent', value.bytesSent, true);
  checkType('int', key+'.bytesReceived', value.bytesReceived, true);
  checkType('String', key+'.rtcpTransportStatsId', value.rtcpTransportStatsId, true);
  checkType('boolean', key+'.activeConnection', value.activeConnection, true);
  checkType('String', key+'.selectedCandidatePairId', value.selectedCandidatePairId, true);
  checkType('String', key+'.localCertificateId', value.localCertificateId, true);
  checkType('String', key+'.remoteCertificateId', value.remoteCertificateId, true);
};


/**
 * Statistics related to RTC data channels.
 *
 * @memberof module:core/complexTypes
 *
 * @typedef core/complexTypes.RTCTransportStats
 *
 * @type {Object}
 * @property {external:Integer} bytesSent
 *  Represents the total number of payload bytes sent on this PeerConnection, i.e., not including headers or padding.
 * @property {external:Integer} bytesReceived
 *  Represents the total number of bytes received on this PeerConnection, i.e., not including headers or padding.
 * @property {external:String} rtcpTransportStatsId
 *  If RTP and RTCP are not multiplexed, this is the id of the transport that gives stats for the RTCP component, and this record has only the RTP component stats.
 * @property {external:Boolean} activeConnection
 *  Set to true when transport is active.
 * @property {external:String} selectedCandidatePairId
 *  It is a unique identifier that is associated to the object that was inspected to produce the RTCIceCandidatePairStats associated with this transport.
 * @property {external:String} localCertificateId
 *  For components where DTLS is negotiated, give local certificate.
 * @property {external:String} remoteCertificateId
 *  For components where DTLS is negotiated, give remote certificate.
 */


module.exports = checkRTCTransportStats;
