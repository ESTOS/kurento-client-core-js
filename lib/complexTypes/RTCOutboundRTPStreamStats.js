/* Autogenerated with Kurento Idl */

/*
 * (C) Copyright 2013-2014 Kurento (http://kurento.org/)
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Lesser General Public License
 * (LGPL) version 2.1 which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl-2.1.html
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 */

var checkType = require('kurento-client').checkType;

/**
 * Checker for {@link core/complexTypes.RTCOutboundRTPStreamStats}
 *
 * @memberof module:core/complexTypes
 *
 * @param {external:String} key
 * @param {module:core/complexTypes.RTCOutboundRTPStreamStats} value
 */
function checkRTCOutboundRTPStreamStats(key, value)
{
  checkType('int', key+'.packetsSent', value.packetsSent, true);
  checkType('int', key+'.bytesSent', value.bytesSent, true);
  checkType('float', key+'.targetBitrate', value.targetBitrate, true);
  checkType('float', key+'.roundTripTime', value.roundTripTime, true);
};


/**
 * Statistics that represents the measurement metrics for the outgoing media stream.
 *
 * @memberof module:core/complexTypes
 *
 * @typedef core/complexTypes.RTCOutboundRTPStreamStats
 *
 * @type {Object}
 * @property {external:Integer} packetsSent
 *  Total number of RTP packets sent for this SSRC.
 * @property {external:Integer} bytesSent
 *  Total number of bytes sent for this SSRC.
 * @property {external:Number} targetBitrate
 *  Presently configured bitrate target of this SSRC, in bits per second.
 * @property {external:Number} roundTripTime
 *  Estimated round trip time (seconds) for this SSRC based on the RTCP timestamp.
 */


module.exports = checkRTCOutboundRTPStreamStats;
